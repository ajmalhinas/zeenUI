/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zeenUI.app;

import static zeenUI.app.ConsoleUtils.exec;
import com.sun.jna.platform.win32.User32;
import com.sun.jna.platform.win32.WinDef;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import org.apache.commons.io.FilenameUtils;
import org.codehaus.plexus.util.FileUtils;

/**
 *
 * @author Hp
 */
public class AppFrame extends javax.swing.JFrame {

    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int widthOfScreen = (int) screenSize.getWidth();
    int heightOfScreen = (int) screenSize.getHeight();
    int currentScreenSize = heightOfScreen - 35;

    private int mouseX, mouseY;
    private static JDialog dialog;
    private JButton approveButton;
    private JLabel sizeOfFrame = new JLabel();

    private static JFileChooser fileChooser;
//    public static final int MAXIMIZED_HORIZ = 4;

    String winTitle = "MINGW64:/C/Zeen";
    //User32 user = User32.INSTANCE;

    //private PrintStream standardOut;
    /**
     * Creates new form ZUI_app
     *
     */
    public AppFrame() {
        initComponents();
        btnPlay.setEnabled(false);
        btnContinue.setEnabled(false);
        btnRepAll.setEnabled(false);
        btnStop.setEnabled(false);
        btnRepLast.setEnabled(false);
        btnReport.setEnabled(false);
        btnCreateTC.setEnabled(false);
        btnOpenTestFile.setEnabled(false);
        btnDeleteTestCase.setEnabled(false);
        btnPause.setVisible(false);
        //btnResize.setEnabled(false);

        //output.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        close = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        restoreSize = new javax.swing.JPanel();
        btnResize = new javax.swing.JButton();
        minimize = new javax.swing.JPanel();
        btnMinimize = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        openProjectPanel = new javax.swing.JPanel();
        btnOpenProject = new javax.swing.JButton();
        reportPanel = new javax.swing.JPanel();
        btnReport = new javax.swing.JButton();
        openFilePanel = new javax.swing.JPanel();
        btnOpenTestFile = new javax.swing.JButton();
        repAllPannel = new javax.swing.JPanel();
        btnRepAll = new javax.swing.JButton();
        repeatPanel = new javax.swing.JPanel();
        btnRepLast = new javax.swing.JButton();
        contPanel = new javax.swing.JPanel();
        btnContinue = new javax.swing.JButton();
        stopPanel = new javax.swing.JPanel();
        btnStop = new javax.swing.JButton();
        createTCPanel = new javax.swing.JPanel();
        btnCreateTC = new javax.swing.JButton();
        createProjectPanel = new javax.swing.JPanel();
        btnCreateProject = new javax.swing.JButton();
        playPanel = new javax.swing.JPanel();
        btnPlay = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        deleteTestCasePanel = new javax.swing.JPanel();
        btnDeleteTestCase = new javax.swing.JButton();
        updateDriverPanel = new javax.swing.JPanel();
        btnUpdateDriver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        dirPath = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("zeen");
        setBackground(new java.awt.Color(204, 204, 255));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(960, 110));
        setResizable(false);
        setSize(new java.awt.Dimension(962, 50));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 40));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setPreferredSize(new java.awt.Dimension(150, 40));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close.setBackground(new java.awt.Color(51, 51, 51));
        close.setPreferredSize(new java.awt.Dimension(50, 40));

        btnClose.setBackground(new java.awt.Color(51, 51, 51));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-close-24.png"))); // NOI18N
        btnClose.setBorder(null);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout closeLayout = new javax.swing.GroupLayout(close);
        close.setLayout(closeLayout);
        closeLayout.setHorizontalGroup(
            closeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeLayout.createSequentialGroup()
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        closeLayout.setVerticalGroup(
            closeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel5.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 50, 40));

        restoreSize.setBackground(new java.awt.Color(204, 204, 204));
        restoreSize.setPreferredSize(new java.awt.Dimension(50, 40));

        btnResize.setBackground(new java.awt.Color(51, 51, 51));
        btnResize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-maximize-24.png"))); // NOI18N
        btnResize.setBorder(null);
        btnResize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResizeMouseExited(evt);
            }
        });
        btnResize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout restoreSizeLayout = new javax.swing.GroupLayout(restoreSize);
        restoreSize.setLayout(restoreSizeLayout);
        restoreSizeLayout.setHorizontalGroup(
            restoreSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnResize, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );
        restoreSizeLayout.setVerticalGroup(
            restoreSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnResize, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel5.add(restoreSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 50, -1));

        minimize.setBackground(new java.awt.Color(204, 204, 204));
        minimize.setPreferredSize(new java.awt.Dimension(50, 40));

        btnMinimize.setBackground(new java.awt.Color(51, 51, 51));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-subtract-24.png"))); // NOI18N
        btnMinimize.setBorder(null);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseExited(evt);
            }
        });
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout minimizeLayout = new javax.swing.GroupLayout(minimize);
        minimize.setLayout(minimizeLayout);
        minimizeLayout.setHorizontalGroup(
            minimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMinimize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );
        minimizeLayout.setVerticalGroup(
            minimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMinimize, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel5.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jPanel1.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setLayout(new java.awt.BorderLayout());

        title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Zeen");
        title.setPreferredSize(new java.awt.Dimension(900, 34));
        title.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titleMouseDragged(evt);
            }
        });
        title.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titleMousePressed(evt);
            }
        });
        jPanel8.add(title, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel8, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(900, 60));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(900, 5));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1148, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(153, 153, 153));
        jPanel10.setPreferredSize(new java.awt.Dimension(10, 55));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel10, java.awt.BorderLayout.LINE_START);

        jPanel11.setBackground(new java.awt.Color(153, 153, 153));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(153, 153, 153));
        jPanel12.setPreferredSize(new java.awt.Dimension(1150, 55));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        openProjectPanel.setBackground(new java.awt.Color(153, 153, 153));
        openProjectPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnOpenProject.setBackground(new java.awt.Color(153, 153, 153));
        btnOpenProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-opened-folder-50.png"))); // NOI18N
        btnOpenProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnOpenProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnOpenProjectMouseExited(evt);
            }
        });
        btnOpenProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout openProjectPanelLayout = new javax.swing.GroupLayout(openProjectPanel);
        openProjectPanel.setLayout(openProjectPanelLayout);
        openProjectPanelLayout.setHorizontalGroup(
            openProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openProjectPanelLayout.createSequentialGroup()
                .addComponent(btnOpenProject, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        openProjectPanelLayout.setVerticalGroup(
            openProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openProjectPanelLayout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(btnOpenProject, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(openProjectPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        reportPanel.setBackground(new java.awt.Color(153, 153, 153));
        reportPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnReport.setBackground(new java.awt.Color(153, 153, 153));
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-report-48.png"))); // NOI18N
        btnReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReportMouseExited(evt);
            }
        });
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                .addComponent(btnReport)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel12.add(reportPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, 60, -1));

        openFilePanel.setBackground(new java.awt.Color(153, 153, 153));
        openFilePanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnOpenTestFile.setBackground(new java.awt.Color(153, 153, 153));
        btnOpenTestFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-open-file-under-cursor-50.png"))); // NOI18N
        btnOpenTestFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnOpenTestFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnOpenTestFileMouseExited(evt);
            }
        });
        btnOpenTestFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenTestFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout openFilePanelLayout = new javax.swing.GroupLayout(openFilePanel);
        openFilePanel.setLayout(openFilePanelLayout);
        openFilePanelLayout.setHorizontalGroup(
            openFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openFilePanelLayout.createSequentialGroup()
                .addComponent(btnOpenTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        openFilePanelLayout.setVerticalGroup(
            openFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openFilePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnOpenTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(openFilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 60, -1));

        repAllPannel.setBackground(new java.awt.Color(153, 153, 153));
        repAllPannel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnRepAll.setBackground(new java.awt.Color(153, 153, 153));
        btnRepAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-repeat-48.png"))); // NOI18N
        btnRepAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRepAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRepAllMouseExited(evt);
            }
        });
        btnRepAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout repAllPannelLayout = new javax.swing.GroupLayout(repAllPannel);
        repAllPannel.setLayout(repAllPannelLayout);
        repAllPannelLayout.setHorizontalGroup(
            repAllPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(repAllPannelLayout.createSequentialGroup()
                .addComponent(btnRepAll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        repAllPannelLayout.setVerticalGroup(
            repAllPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, repAllPannelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnRepAll))
        );

        jPanel12.add(repAllPannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 60, -1));

        repeatPanel.setBackground(new java.awt.Color(153, 153, 153));
        repeatPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnRepLast.setBackground(new java.awt.Color(153, 153, 153));
        btnRepLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-repeat-48_1.png"))); // NOI18N
        btnRepLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRepLastMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRepLastMouseExited(evt);
            }
        });
        btnRepLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout repeatPanelLayout = new javax.swing.GroupLayout(repeatPanel);
        repeatPanel.setLayout(repeatPanelLayout);
        repeatPanelLayout.setHorizontalGroup(
            repeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(repeatPanelLayout.createSequentialGroup()
                .addComponent(btnRepLast, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        repeatPanelLayout.setVerticalGroup(
            repeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, repeatPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnRepLast, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(repeatPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 60, -1));

        contPanel.setBackground(new java.awt.Color(153, 153, 153));
        contPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnContinue.setBackground(new java.awt.Color(153, 153, 153));
        btnContinue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-forward-button-48.png"))); // NOI18N
        btnContinue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnContinueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnContinueMouseExited(evt);
            }
        });
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contPanelLayout = new javax.swing.GroupLayout(contPanel);
        contPanel.setLayout(contPanelLayout);
        contPanelLayout.setHorizontalGroup(
            contPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contPanelLayout.createSequentialGroup()
                .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        contPanelLayout.setVerticalGroup(
            contPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contPanelLayout.createSequentialGroup()
                .addComponent(btnContinue)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel12.add(contPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 60, -1));

        stopPanel.setBackground(new java.awt.Color(153, 153, 153));
        stopPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnStop.setBackground(new java.awt.Color(153, 153, 153));
        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-stop-48.png"))); // NOI18N
        btnStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStopMouseExited(evt);
            }
        });
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stopPanelLayout = new javax.swing.GroupLayout(stopPanel);
        stopPanel.setLayout(stopPanelLayout);
        stopPanelLayout.setHorizontalGroup(
            stopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stopPanelLayout.createSequentialGroup()
                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        stopPanelLayout.setVerticalGroup(
            stopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stopPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnStop))
        );

        jPanel12.add(stopPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 60, -1));

        createTCPanel.setBackground(new java.awt.Color(153, 153, 153));
        createTCPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnCreateTC.setBackground(new java.awt.Color(153, 153, 153));
        btnCreateTC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-add-file-48.png"))); // NOI18N
        btnCreateTC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateTCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateTCMouseExited(evt);
            }
        });
        btnCreateTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createTCPanelLayout = new javax.swing.GroupLayout(createTCPanel);
        createTCPanel.setLayout(createTCPanelLayout);
        createTCPanelLayout.setHorizontalGroup(
            createTCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTCPanelLayout.createSequentialGroup()
                .addComponent(btnCreateTC, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        createTCPanelLayout.setVerticalGroup(
            createTCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTCPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreateTC, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(createTCPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        createProjectPanel.setBackground(new java.awt.Color(153, 153, 153));
        createProjectPanel.setPreferredSize(new java.awt.Dimension(60, 55));
        createProjectPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                createProjectPanelMouseEntered(evt);
            }
        });

        btnCreateProject.setBackground(new java.awt.Color(153, 153, 153));
        btnCreateProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-add-folder-48.png"))); // NOI18N
        btnCreateProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateProjectMouseExited(evt);
            }
        });
        btnCreateProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createProjectPanelLayout = new javax.swing.GroupLayout(createProjectPanel);
        createProjectPanel.setLayout(createProjectPanelLayout);
        createProjectPanelLayout.setHorizontalGroup(
            createProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createProjectPanelLayout.createSequentialGroup()
                .addComponent(btnCreateProject, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        createProjectPanelLayout.setVerticalGroup(
            createProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createProjectPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreateProject, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(createProjectPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, -1, -1));

        playPanel.setBackground(new java.awt.Color(153, 153, 153));
        playPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnPlay.setBackground(new java.awt.Color(153, 153, 153));
        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-play-30.png"))); // NOI18N
        btnPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPlayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPlayMouseExited(evt);
            }
        });
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnPause.setBackground(new java.awt.Color(153, 153, 153));
        btnPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-pause-48_1.png"))); // NOI18N
        btnPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPauseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPauseMouseExited(evt);
            }
        });
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playPanelLayout = new javax.swing.GroupLayout(playPanel);
        playPanel.setLayout(playPanelLayout);
        playPanelLayout.setHorizontalGroup(
            playPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playPanelLayout.createSequentialGroup()
                .addGroup(playPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        playPanelLayout.setVerticalGroup(
            playPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playPanelLayout.createSequentialGroup()
                .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(playPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 60, -1));

        deleteTestCasePanel.setBackground(new java.awt.Color(153, 153, 153));
        deleteTestCasePanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnDeleteTestCase.setBackground(new java.awt.Color(153, 153, 153));
        btnDeleteTestCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-remove-48.png"))); // NOI18N
        btnDeleteTestCase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteTestCaseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteTestCaseMouseExited(evt);
            }
        });
        btnDeleteTestCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTestCaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deleteTestCasePanelLayout = new javax.swing.GroupLayout(deleteTestCasePanel);
        deleteTestCasePanel.setLayout(deleteTestCasePanelLayout);
        deleteTestCasePanelLayout.setHorizontalGroup(
            deleteTestCasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteTestCasePanelLayout.createSequentialGroup()
                .addComponent(btnDeleteTestCase, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        deleteTestCasePanelLayout.setVerticalGroup(
            deleteTestCasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteTestCasePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDeleteTestCase, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(deleteTestCasePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, -1, -1));

        updateDriverPanel.setBackground(new java.awt.Color(153, 153, 153));
        updateDriverPanel.setPreferredSize(new java.awt.Dimension(60, 55));

        btnUpdateDriver.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdateDriver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-installing-updates-48.png"))); // NOI18N
        btnUpdateDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateDriverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateDriverMouseExited(evt);
            }
        });
        btnUpdateDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDriverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateDriverPanelLayout = new javax.swing.GroupLayout(updateDriverPanel);
        updateDriverPanel.setLayout(updateDriverPanelLayout);
        updateDriverPanelLayout.setHorizontalGroup(
            updateDriverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDriverPanelLayout.createSequentialGroup()
                .addComponent(btnUpdateDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        updateDriverPanelLayout.setVerticalGroup(
            updateDriverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateDriverPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnUpdateDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.add(updateDriverPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Wait After Time(sec):");
        jPanel12.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 150, 40));

        txtTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTime.setText("1");
        txtTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimeMouseClicked(evt);
            }
        });
        txtTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimeKeyTyped(evt);
            }
        });
        jPanel12.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 50, 40));

        jPanel11.add(jPanel12, java.awt.BorderLayout.LINE_START);

        jPanel7.add(jPanel11, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel13.setBackground(new java.awt.Color(204, 204, 255));
        jPanel13.setPreferredSize(new java.awt.Dimension(900, 10));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1148, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGap(0, 93, Short.MAX_VALUE)
                    .addComponent(dirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 93, Short.MAX_VALUE)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(dirPath)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel4.add(jPanel13, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Sure?\nYou want to exit?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            this.dispose();
        } else if (response == JOptionPane.NO_OPTION) {

        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        // TODO add your handling code here:
        close.setBackground(Color.red);
        btnClose.setBackground(Color.red);

    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        // TODO add your handling code here:
        close.setBackground(Color.getColor("#333333"));
        btnClose.setBackground(Color.getColor("#333333"));
    }//GEN-LAST:event_btnCloseMouseExited

    private void btnResizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResizeMouseEntered
        // TODO add your handling code here:
        restoreSize.setBackground(Color.DARK_GRAY);
        btnResize.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_btnResizeMouseEntered

    private void btnResizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResizeMouseExited
        // TODO add your handling code here:
        restoreSize.setBackground(Color.getColor("#333333"));
        btnResize.setBackground(Color.getColor("#333333"));
    }//GEN-LAST:event_btnResizeMouseExited

    private void btnMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseEntered
        // TODO add your handling code here:
        minimize.setBackground(Color.DARK_GRAY);
        btnMinimize.setBackground(Color.DARK_GRAY);

    }//GEN-LAST:event_btnMinimizeMouseEntered

    private void btnMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseExited
        // TODO add your handling code here:
        minimize.setBackground(Color.getColor("#333333"));
        btnMinimize.setBackground(Color.getColor("#333333"));
    }//GEN-LAST:event_btnMinimizeMouseExited

    private void btnRepAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepAllActionPerformed
        // TODO add your handling code here:

        new HandlingWindow(winTitle);

        try {
            Robot r = new Robot();
            r.keyPress(KeyEvent.VK_A);
            r.keyRelease(KeyEvent.VK_A);
            r.keyPress(KeyEvent.VK_ENTER);

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnRepAllActionPerformed

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed
        // TODO add your handling code here:

        new HandlingWindow(winTitle);

        try {
            Robot r = new Robot();
            r.keyPress(KeyEvent.VK_C);
            r.keyRelease(KeyEvent.VK_C);
            r.keyPress(KeyEvent.VK_ENTER);

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnContinueActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Sure? You want to Stop", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            new HandlingWindow(winTitle);

            try {
                Robot r = new Robot();
                r.keyPress(KeyEvent.VK_CONTROL);
                r.keyPress(KeyEvent.VK_C);
                r.keyRelease(KeyEvent.VK_CONTROL);
                r.keyRelease(KeyEvent.VK_C);
                r.delay(2000);

                btnContinue.setEnabled(false);
                btnRepAll.setEnabled(false);
                btnStop.setEnabled(false);
                btnRepLast.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        btnPause.setVisible(false);
        btnPlay.setVisible(true);
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnResizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResizeActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btnResizeActionPerformed

    private void btnResizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResizeMouseClicked
        // TODO add your handling code here:

        Dimension currentFrameSize = this.getSize();
        String siz = currentFrameSize.toString();

        String s = sizeOfFrame.getText();

        if (siz.equals(s)) {

            int heightOfFrame = (int) currentFrameSize.getHeight();

            this.setBounds(150, currentScreenSize - heightOfFrame, 962, heightOfFrame);

        } else {
            setLocationToBottom(this);
        }

    }//GEN-LAST:event_btnResizeMouseClicked

    private void titleMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleMouseDragged
        // TODO add your handling code here:
        setLocation(evt.getXOnScreen() - mouseX, evt.getYOnScreen() - mouseY);
    }//GEN-LAST:event_titleMouseDragged

    private void titleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleMousePressed
        // TODO add your handling code here:

        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_titleMousePressed

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        // TODO add your handling code here:
        this.setExtendedState(AppFrame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btnPlayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseEntered
        // TODO add your handling code here:
        playPanel.setBackground(Color.LIGHT_GRAY);
        btnPlay.setBackground(Color.LIGHT_GRAY);
        btnPlay.setToolTipText("Run Test");
    }//GEN-LAST:event_btnPlayMouseEntered

    private void btnPlayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseExited
        // TODO add your handling code here:
        playPanel.setBackground(Color.getColor("#999999"));
        btnPlay.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnPlayMouseExited

    private void btnRepLastMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRepLastMouseEntered
        // TODO add your handling code here:
        repeatPanel.setBackground(Color.LIGHT_GRAY);
        btnRepLast.setBackground(Color.LIGHT_GRAY);
        btnRepLast.setToolTipText("Reapeate Last Test Case");
    }//GEN-LAST:event_btnRepLastMouseEntered

    private void btnRepLastMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRepLastMouseExited
        // TODO add your handling code here:
        repeatPanel.setBackground(Color.getColor("#999999"));
        btnRepLast.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnRepLastMouseExited

    private void btnRepAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRepAllMouseEntered
        // TODO add your handling code here:
        repAllPannel.setBackground(Color.LIGHT_GRAY);
        btnRepAll.setBackground(Color.LIGHT_GRAY);
        btnRepAll.setToolTipText("Reapeate All");
    }//GEN-LAST:event_btnRepAllMouseEntered

    private void btnRepAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRepAllMouseExited
        // TODO add your handling code here:
        repAllPannel.setBackground(Color.getColor("#999999"));
        btnRepAll.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnRepAllMouseExited

    private void btnContinueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnContinueMouseEntered
        // TODO add your handling code here:
        contPanel.setBackground(Color.LIGHT_GRAY);
        btnContinue.setBackground(Color.LIGHT_GRAY);
        btnContinue.setToolTipText("Skip & Continue the Test");
    }//GEN-LAST:event_btnContinueMouseEntered

    private void btnContinueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnContinueMouseExited
        // TODO add your handling code here:
        contPanel.setBackground(Color.getColor("#999999"));
        btnContinue.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnContinueMouseExited

    private void btnStopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStopMouseEntered
        // TODO add your handling code here:
        stopPanel.setBackground(Color.LIGHT_GRAY);
        btnStop.setBackground(Color.LIGHT_GRAY);
        btnStop.setToolTipText("Stop Testing");
    }//GEN-LAST:event_btnStopMouseEntered

    private void btnStopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStopMouseExited
        // TODO add your handling code here:
        stopPanel.setBackground(Color.getColor("#999999"));
        btnStop.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnStopMouseExited

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed

        // TODO add your handling code here:
        int w;
        String time = txtTime.getText();
        if (time.isEmpty()) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Can not run with empty wait after time", "Wait After Time", JOptionPane.ERROR_MESSAGE);

        } else {
            w = Integer.parseInt(time);

            String testFiles = dirPath.getText();
            String difFile = testFiles + "/output/diffs";
            File diffsFolder = new File(difFile);

            if (diffsFolder.exists()) {
                String scrFile = testFiles + "/output/screenshots";
                File scrFolder = new File(scrFile);
                if (scrFolder.exists()) {

                    String tcFile = testFiles + "//testExe.csv";
                    File tcFolder = new File(tcFile);
                    if (tcFolder.exists()) {
                        //User32.INSTANCE.FindWindow(null, winTitle);
                        try {
                            WinDef.HWND zeenWindow = User32.INSTANCE.FindWindow(null, winTitle);
                            // User32.INSTANCE.PostMessage(zeenWindow, WinUser.WM_CLOSE, null, null);

                            Robot r = new Robot();

                            Dimension sizeOfJFrame = this.getSize();
                            int x = 30 + (int) sizeOfJFrame.getHeight();
                            int y = heightOfScreen - x;

                            //new HandlingWindow("MINGW64:/C/Zeen");
                            if (User32.INSTANCE.IsWindowEnabled(zeenWindow)) {
                                User32.INSTANCE.SetForegroundWindow(zeenWindow);

                                r.delay(1000);
                                String Upath = dirPath.getText().replace(":", "");
                                String zeenCommand = "./zeen.sh --directory /" + FilenameUtils.separatorsToUnix(Upath) + " -w " + w;
//                        System.out.println(zeenCommand);                     
                                keyboardString(zeenCommand);
                                r.keyPress(KeyEvent.VK_ENTER);
                                btnContinue.setEnabled(true);

                                btnRepAll.setEnabled(true);
                                btnStop.setEnabled(true);
                                btnRepLast.setEnabled(true);
                                btnReport.setEnabled(true);
                                btnPlay.setVisible(false);
                                btnPause.setVisible(true);

                            } else {
                                exec("C:/Program Files/Git/git-bash.exe");
                                r.delay(3000);
                                keyboardString("cd /C/Zeen ");
                                r.keyPress(KeyEvent.VK_ENTER);
                                r.delay(1000);
                                User32.INSTANCE.MoveWindow(User32.INSTANCE.FindWindow(null, winTitle), 0, y - 254, widthOfScreen, 250, true);
                                String Upath = dirPath.getText().replace(":", "");
                                String zeenCommand = "./zeen.sh --directory /" + FilenameUtils.separatorsToUnix(Upath) + " -w " + w;
//                        System.out.println(zeenCommand);                     
                                keyboardString(zeenCommand);
                                r.keyPress(KeyEvent.VK_ENTER);
                                btnContinue.setEnabled(true);

                                btnRepAll.setEnabled(true);
                                btnStop.setEnabled(true);
                                btnRepLast.setEnabled(true);
                                btnReport.setEnabled(true);
                                btnPlay.setVisible(false);
                                btnPause.setVisible(true);

                            }

                            this.setAlwaysOnTop(true);

                        } catch (Exception ex) {
                            btnPause.setVisible(false);
                            ex.printStackTrace();
                        }

                    } else {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(this, "File not found. Check the file and path: .. " + tcFolder.getAbsolutePath(), "File Missing", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Unknown error has occured conduct the vendor:\nFile system element for parameter 'directory' does not exist: .. " + scrFolder.getAbsolutePath(), "File Missing", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                getToolkit().beep();
                JOptionPane.showMessageDialog(this, "Unknown error has occured conduct the vendor:\nFile system element for parameter 'directory' does not exist: .. " + diffsFolder.getAbsolutePath(), "File Missing", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnPlayActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        // TODO add your handling code here:

//        WinDef.HWND zeenWindow = User32.INSTANCE.FindWindow(null, "a - Notepad");
//////         WinDef.HWND notepadWindow = User32.INSTANCE.FindWindow(null, "theAwtToolkitWindow");
//////        User32.INSTANCE.SetForegroundWindow(notepadWindow);
//////Dimension sizeOfJFrame=this.getSize();
//////        
//////         int heightOfJFrame = (int) sizeOfJFrame.getHeight();
//////        int size= currentScreenSize-heightOfJFrame;
////////        System.out.println(widthOfScreen+"\n"+heightOfScreen+"\n"+currentScreenSize+"\n"+heightOfJFrame+"\n"+size);
//////        User32.INSTANCE.MoveWindow(notepadWindow, 0, size, widthOfScreen, heightOfJFrame, true);
        setLocationToBottom(this);
        sizeOfFrame.setText(this.getSize().toString());

//        System.out.println(s);

    }//GEN-LAST:event_formWindowOpened

    private void btnCreateProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateProjectMouseEntered
        // TODO add your handling code here:
        createProjectPanel.setBackground(Color.LIGHT_GRAY);
        btnCreateProject.setBackground(Color.LIGHT_GRAY);
        btnCreateProject.setToolTipText("Create New Project");
    }//GEN-LAST:event_btnCreateProjectMouseEntered

    private void btnCreateProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateProjectMouseExited
        // TODO add your handling code here:
        createProjectPanel.setBackground(Color.getColor("#999999"));
        btnCreateProject.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnCreateProjectMouseExited

    private void btnCreateProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProjectActionPerformed
        // TODO add your handling code here:

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            dialog = new JDialog(this, " New Test Project", true);
            dialog.getAlignmentX();
            ImageIcon icon = new ImageIcon("src/main/resources/image/letter-z.png");
            dialog.setIconImage(icon.getImage());
            dialog.pack();

            dialog.setBounds(400, 200, 400, 400);
            dialog.setLayout(new BorderLayout());

            JPanel panel1 = new JPanel(new FlowLayout(FlowLayout.LEADING));
            JPanel panel2 = new JPanel(new FlowLayout(FlowLayout.LEADING));
            JPanel panel3 = new JPanel(new FlowLayout(FlowLayout.LEADING));
            JPanel panelbtn = new JPanel(new FlowLayout(FlowLayout.RIGHT));

            JLabel lblProjectName = new JLabel("Project Name:       ");
            lblProjectName.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            JLabel lblProjectLocation = new JLabel("Project Location:   ");
            lblProjectLocation.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            JLabel lblProjectFolder = new JLabel("Project Folder:      ");
            lblProjectFolder.setFont(new Font("Times New Roman", Font.PLAIN, 14));

            JTextField txtProjectName = new JTextField(35);
            panel1.add(lblProjectName);
            panel1.add(txtProjectName);

            JTextField txtProjectLocation = new JTextField(35);
            panel2.add(lblProjectLocation);
            txtProjectLocation.setText(fileChooser.getCurrentDirectory().getAbsolutePath());
            panel2.add(txtProjectLocation);
            JTextField txtProjectFolder = new JTextField(35);
            txtProjectFolder.setText(txtProjectLocation.getText());

            JButton btnBrowse = new JButton("Browse");
            btnBrowse.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {

                    int res = fileChooser.showOpenDialog(null);
                    if (res == fileChooser.APPROVE_OPTION) {
                        String path = fileChooser.getSelectedFile().getAbsolutePath();
                        txtProjectLocation.setText(path + "\\");
                        txtProjectFolder.setText(txtProjectLocation.getText());
                    }
                }
            });
            panel2.add(btnBrowse);

            JButton btnCreate = new JButton("Create");
            btnCreate.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String folder = txtProjectLocation.getText();
                    File source = new File("c:/Zeen/template/projectFileTemplate");
                    File newpath = new File(folder + "/" + txtProjectName.getText());

                    Pattern pattern = Pattern.compile("(?i)(^[a-z])\\w{1,29}$");
                    Matcher m = pattern.matcher(txtProjectName.getText());

                    if (txtProjectName.getText().equals("")) {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(null, "Project name cannot be empty");
                        txtProjectName.requestFocus();
                    } else if (m.matches() == false) {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(null, "Project name can not contain whitespace and invalid charactors");
                    } else if (newpath.exists()) {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(null, "Project name is already exist in the directory.");
                        txtProjectName.selectAll();
                        txtProjectName.requestFocus();

                    } else {

                        File destinationFolder = new File(folder + "/", txtProjectName.getText());
                        try {

                            FileUtils.copyDirectoryStructure(source, destinationFolder);
                            JOptionPane.showMessageDialog(null, "Project created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                        dialog.dispose();
                        title.setText(txtProjectFolder.getText() + " - " + "Zeen");
//                        output.setText(Folder.getText() + "\n" + "run");
//                        output.setEditable(false);
                        dirPath.setText(txtProjectFolder.getText());
                        dirPath.setVisible(false);
                        // btnOpenTestFile.setEnabled(true);
                        btnCreateTC.setEnabled(true);

                    }

                }
            });
            panelbtn.add(btnCreate);
            panel3.add(lblProjectFolder);
            panel3.add(txtProjectFolder);

            txtProjectName.addKeyListener(new KeyListener() {
                @Override
                public void keyTyped(KeyEvent e) {

                }

                @Override
                public void keyPressed(KeyEvent e) {
                    txtProjectFolder.setText(txtProjectLocation.getText() + "\\" + txtProjectName.getText());
//
                }

                @Override
                public void keyReleased(KeyEvent e) {

                    txtProjectFolder.setText(txtProjectLocation.getText() + "\\" + txtProjectName.getText());

                }
            });

            JButton btnCancel = new JButton("Cancel");
            btnCancel.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    dialog.dispose();
                }
            });
            panelbtn.add(btnCancel);

            JPanel compoPanel = new JPanel(new GridLayout(4, 0));

            compoPanel.add(panel1);
            compoPanel.add(panel2);
            compoPanel.add(panel3);

            dialog.add(compoPanel, BorderLayout.NORTH);
            dialog.add(panelbtn, BorderLayout.SOUTH);

            txtProjectFolder.setEditable(false);
            dialog.setSize(500, 200);
            dialog.setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnCreateProjectActionPerformed

    private void btnCreateTCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateTCMouseEntered
        // TODO add your handling code here:
        createTCPanel.setBackground(Color.LIGHT_GRAY);
        btnCreateTC.setBackground(Color.LIGHT_GRAY);
        btnCreateTC.setToolTipText("Create New Test Suite");
    }//GEN-LAST:event_btnCreateTCMouseEntered

    private void btnCreateTCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateTCMouseExited
        // TODO add your handling code here:
        createTCPanel.setBackground(Color.getColor("#999999"));
        btnCreateTC.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnCreateTCMouseExited

    private void btnCreateTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTCActionPerformed
        // TODO add your handling code here:

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            fileChooser = new JFileChooser(dirPath.getText());

            JLabel lblTestSuiteName = new JLabel("Test Suite Name:     ");
            lblTestSuiteName.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            JTextField txtTestSuiteName = new JTextField(28);
            JLabel lblTestSuiteLocation = new JLabel("Test Suite Location: ");
            lblTestSuiteLocation.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            JTextField txtTestSuiteFolder = new JTextField(28);
            txtTestSuiteFolder.setEditable(false);

            //JPanel createTitlePanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
            JPanel panel1 = new JPanel(new FlowLayout(FlowLayout.LEADING));
            JPanel panel2 = new JPanel(new FlowLayout(FlowLayout.RIGHT));
            JPanel panel3 = new JPanel(new FlowLayout(FlowLayout.LEADING));

            panel1.add(lblTestSuiteName);
            panel1.add(txtTestSuiteName);
            panel3.add(lblTestSuiteLocation);
            panel3.add(txtTestSuiteFolder);

            //JFrame frame = new JFrame();
            dialog = new JDialog(this, "New Test Suite", true);
            dialog.getAlignmentX();
            ImageIcon icon = new ImageIcon("src/main/resources/image/letter-z.png");
            dialog.setIconImage(icon.getImage());
            dialog.pack();

            dialog.setBounds(400, 200, 400, 400);

            dialog.setLayout(new BorderLayout());

            // ProjectChooser projectChooser = new ProjectChooser();
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            txtTestSuiteFolder.setText(dirPath.getText());

            JButton btnCreateTestSuite = new JButton("Create");
            btnCreateTestSuite.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    //  try{

                    Pattern pattern = Pattern.compile("(?i)(^[a-z])\\w{1,29}$");
                    Matcher m = pattern.matcher(txtTestSuiteName.getText());

                    if (txtTestSuiteName.getText().trim().isEmpty()) {
                        getToolkit().beep();
                        JOptionPane.showConfirmDialog(null, "Test Suite name can't be empty", "Confirm", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE);
                    } else if (m.matches() == false) {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(null, "Test Suite name can not contain whitespace and invalid charactors");
                    } else {
                        File folder1 = new File(txtTestSuiteFolder.getText() + "\\" + txtTestSuiteName.getText());
                        if (!folder1.exists()) {
                            folder1.mkdir();

                            File source = new File("C:/Zeen/template/testCaseFileTemplate/NavExpo.csv");
                            File destination = new File(folder1 + "/" + txtTestSuiteName.getText() + ".csv");

                            File source1 = new File("C:/Zeen/template/testCaseFileTemplate/NavExpo_data.csv");
                            File destination1 = new File(folder1 + "/" + txtTestSuiteName.getText() + "_data" + ".csv");

                            try {
                                FileUtils.copyFile(source, destination);
                                FileUtils.copyFile(source1, destination1);
                                JOptionPane.showConfirmDialog(null, "Test Suite created Successfully", "Success", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                                dialog.dispose();
                                btnPlay.setEnabled(true);
                                btnOpenTestFile.setEnabled(true);
                                btnDeleteTestCase.setEnabled(true);

                                //title.setText(folder.getText() + " - ZeenUI");
                                dirPath.setText(txtTestSuiteFolder.getText());
                                dirPath.setVisible(false);
//                                output.setText(folder.getText() + "\n" + "run");
//                                output.setEditable(false);

                                Desktop.getDesktop().open(destination);
                                Desktop.getDesktop().open(destination1);

                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                        } else {
                            getToolkit().beep();
                            JOptionPane.showConfirmDialog(null, "Test Suite name already exists", "Confirm", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                            txtTestSuiteName.selectAll();
                            txtTestSuiteName.requestFocus();
                        }
                    }

                }
            });
            panel2.add(btnCreateTestSuite);

            JButton btnCancelTestSuite = new JButton("Cancel");
            btnCancelTestSuite.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    dialog.dispose();
                }
            });
            panel2.add(btnCancelTestSuite);

            // createTitlePanel.add(createTitle);
            JPanel compoPanel = new JPanel(new GridLayout(2, 0));

            //compoPanel.add(createTitlePanel);
            compoPanel.add(panel1);
            compoPanel.add(panel3);

            dialog.add(compoPanel, BorderLayout.NORTH);
            dialog.add(panel2, BorderLayout.SOUTH);

            dialog.setSize(400, 160);
            dialog.setVisible(true);

        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_btnCreateTCActionPerformed

    private void createProjectPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createProjectPanelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_createProjectPanelMouseEntered

    private void btnRepLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepLastActionPerformed
        // TODO add your handling code here:

        new HandlingWindow(winTitle);

        try {
            Robot r = new Robot();
            r.keyPress(KeyEvent.VK_R);
            r.keyRelease(KeyEvent.VK_R);
            r.keyPress(KeyEvent.VK_ENTER);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRepLastActionPerformed

    private void btnOpenProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenProjectActionPerformed
        // TODO add your handling code here:
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(fileChooser.getSelectedFile());
            //OPen the JFileChooser window
            fileChooser.setDialogTitle("Open Test Project");

            if (approveButton == null) {
                approveButton = lookupButton(fileChooser, fileChooser.getUI().getApproveButtonText(fileChooser));
                approveButton.setEnabled(false);

            } else {
                approveButton = lookupButton(fileChooser, fileChooser.getUI().getApproveButtonText(fileChooser));
                approveButton.setEnabled(false);
            }
            fileChooser.setAcceptAllFileFilterUsed(false);
            fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
                @Override
                public boolean accept(File f) {
                    return f.isDirectory() || f.isFile();
                }

                @Override
                public String getDescription() {
                    return "Test Project";
                }
            });

            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

            fileChooser.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if (evt.getPropertyName().equals(JFileChooser.SELECTED_FILE_CHANGED_PROPERTY)) {

                        String newFile = evt.getNewValue().toString();
                        // System.out.println(newFile);
                        File mainFile = new File(newFile);
                        String dif = newFile + "/output";
                        File difFile = new File(dif);
                        String scr = newFile + "/screenshots";
                        File scrFile = new File(scr);

                        String testCase = newFile + "/testExe.csv";
                        File testFile = new File(testCase);

                        if (mainFile.isDirectory() && difFile.exists()
                                && testFile.exists()) {

                            approveButton.setEnabled(true);
                        } else {

                            approveButton.setEnabled(false);
                        }

                    }
                }
            });
            int res = fileChooser.showOpenDialog(null);
            if (res == JFileChooser.APPROVE_OPTION) {

                title.setText(fileChooser.getSelectedFile().getAbsolutePath() + " - " + "Zeen");
                dirPath.setText(fileChooser.getSelectedFile().getAbsolutePath());
                dirPath.setVisible(false);
                //output.setText(projectChooser.getSelectedFile().getAbsolutePath() + "\nrun: \n");

                btnPlay.setEnabled(true);

                btnOpenTestFile.setEnabled(true);
                btnCreateTC.setEnabled(true);
                btnDeleteTestCase.setEnabled(true);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnOpenProjectActionPerformed

    private void btnOpenProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenProjectMouseExited
        // TODO add your handling code here:
        openProjectPanel.setBackground(Color.getColor("#999999"));
        btnOpenProject.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnOpenProjectMouseExited

    private void btnOpenProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenProjectMouseEntered
        // TODO add your handling code here:
        openProjectPanel.setBackground(Color.LIGHT_GRAY);
        btnOpenProject.setBackground(Color.LIGHT_GRAY);
        btnOpenProject.setToolTipText("Open Test Project");
    }//GEN-LAST:event_btnOpenProjectMouseEntered

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        try {
            // TODO add your handling code here:

            Desktop.getDesktop().open(new File(dirPath.getText() + "/output/testReport.csv"));
        } catch (IOException ex) {
            Logger.getLogger(AppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnReportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseExited
        // TODO add your handling code here:
        reportPanel.setBackground(Color.getColor("#999999"));
        btnReport.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnReportMouseExited

    private void btnReportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseEntered
        // TODO add your handling code here:
        reportPanel.setBackground(Color.LIGHT_GRAY);
        btnReport.setBackground(Color.LIGHT_GRAY);
        btnReport.setToolTipText("View Report");
    }//GEN-LAST:event_btnReportMouseEntered

    private void btnDeleteTestCaseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteTestCaseMouseEntered
        // TODO add your handling code here:
        deleteTestCasePanel.setBackground(Color.LIGHT_GRAY);
        btnDeleteTestCase.setBackground(Color.LIGHT_GRAY);
        btnDeleteTestCase.setToolTipText("Delete Test Suite");
    }//GEN-LAST:event_btnDeleteTestCaseMouseEntered

    private void btnDeleteTestCaseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteTestCaseMouseExited
        // TODO add your handling code here:
        deleteTestCasePanel.setBackground(Color.getColor("#999999"));
        btnDeleteTestCase.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnDeleteTestCaseMouseExited

    private void btnDeleteTestCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTestCaseActionPerformed
        // TODO add your handling code here:
        try {

            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(dirPath.getText()));
            fileChooser.setApproveButtonText("Delete");

            if (approveButton == null) {
                approveButton = lookupButton(fileChooser, fileChooser.getUI().getApproveButtonText(fileChooser));
                approveButton.setEnabled(false);

            } else {
                approveButton = lookupButton(fileChooser, fileChooser.getUI().getApproveButtonText(fileChooser));
                approveButton.setEnabled(false);
            }

            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

            fileChooser.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if (evt.getPropertyName().equals(JFileChooser.SELECTED_FILE_CHANGED_PROPERTY)) {

                        // System.out.println(evt.getNewValue());
                        String newFile = evt.getNewValue().toString();
                        // System.out.println(newFile);

                        File mainFile = new File(newFile);

                        String stepFileName = mainFile + "/" + mainFile.getName() + ".csv";
                        File stepFile = new File(stepFileName);

                        String dataFileName = mainFile + "/" + mainFile.getName() + "_data.csv";
                        File dataFile = new File(dataFileName);

                        if (mainFile.isDirectory() && stepFile.exists() && dataFile.exists()) {
                            approveButton.setEnabled(true);
                        } else {

                            approveButton.setEnabled(false);
                        }

                    }
                }
            });
            //   deleteTestCaseFileChooser.showOpenDialog(null);
            fileChooser.setDialogTitle("delete Test Suite");
            int response = fileChooser.showDialog(null, "Delete");
            if (response == JFileChooser.APPROVE_OPTION) {
                File DeltFile = fileChooser.getSelectedFile();

                if (DeltFile.exists()) {
                    if (DeltFile.isDirectory()) {
                        File[] fs = DeltFile.listFiles();
                        for (File ff : fs) {
                            ff.delete();
                        }

                        DeltFile.delete();

                        JOptionPane.showMessageDialog(null, "The Test Suite Deleted Successfully", "Confirm", JOptionPane.DEFAULT_OPTION);
                    } else {
//                        DeltFile.delete();
//                        JOptionPane.showMessageDialog(null, "The Test Case Deleted Successfully", "Confirm", JOptionPane.DEFAULT_OPTION);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnDeleteTestCaseActionPerformed

    private void btnPauseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPauseMouseEntered
        // TODO add your handling code here:
        playPanel.setBackground(Color.LIGHT_GRAY);
        btnPause.setBackground(Color.LIGHT_GRAY);
        btnPause.setToolTipText("Abort the test");

    }//GEN-LAST:event_btnPauseMouseEntered

    private void btnPauseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPauseMouseExited
        // TODO add your handling code here:
        playPanel.setBackground(Color.getColor("#999999"));
        btnPause.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnPauseMouseExited

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        // TODO add your handling code here:

        //user.FindWindow(null, winTitle);
        try {
            new HandlingWindow(winTitle);
            keyboardString("b");

            Robot r = new Robot();
            r.keyPress(KeyEvent.VK_ENTER);
            btnPause.setVisible(false);
            btnPlay.setVisible(true);
        } catch (Exception e) {

            e.printStackTrace();
        }


    }//GEN-LAST:event_btnPauseActionPerformed

    private void btnOpenTestFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenTestFileActionPerformed
        // TODO add your handling code here:

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            fileChooser = new JFileChooser();
            String pathOPenFile = dirPath.getText();
            File pathSelectFile = new File(pathOPenFile);

            fileChooser.setCurrentDirectory(pathSelectFile);

            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            fileChooser.setDialogTitle("Open Test Suite File");

            int res = fileChooser.showOpenDialog(null);
            if (res == JFileChooser.APPROVE_OPTION) {
                try {

                    File selectFile = fileChooser.getSelectedFile();
                    Desktop.getDesktop().open(selectFile);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnOpenTestFileActionPerformed

    private void btnOpenTestFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenTestFileMouseExited
        // TODO add your handling code here:

        openFilePanel.setBackground(Color.getColor("#999999"));
        btnOpenTestFile.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnOpenTestFileMouseExited

    private void btnOpenTestFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenTestFileMouseEntered
        // TODO add your handling code here:

        openFilePanel.setBackground(Color.LIGHT_GRAY);
        btnOpenTestFile.setBackground(Color.LIGHT_GRAY);
        btnOpenTestFile.setToolTipText("Open Test Suite");
    }//GEN-LAST:event_btnOpenTestFileMouseEntered

    private void btnUpdateDriverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateDriverMouseEntered
        // TODO add your handling code here:
        updateDriverPanel.setBackground(Color.LIGHT_GRAY);
        btnUpdateDriver.setBackground(Color.LIGHT_GRAY);
        btnUpdateDriver.setToolTipText("Update Zeen");
    }//GEN-LAST:event_btnUpdateDriverMouseEntered

    private void btnUpdateDriverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateDriverMouseExited
        // TODO add your handling code here:
        updateDriverPanel.setBackground(Color.getColor("#999999"));
        btnUpdateDriver.setBackground(Color.getColor("#999999"));
    }//GEN-LAST:event_btnUpdateDriverMouseExited

    private void btnUpdateDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDriverActionPerformed

//      
        URL url;
        try {
            url = new URL("https://www.google.com");
            URLConnection connection = url.openConnection();
            connection.connect();
            //exec("C:/Zeen/update.bat");
            Desktop.getDesktop().open(new File("C:/Zeen/update.bat"));

        } catch (MalformedURLException ex) {

            JOptionPane.showMessageDialog(null, "Check your internet connection", "No Internet", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Check your internet connection", "No Internet", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdateDriverActionPerformed

    private void txtTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimeMouseClicked
        // TODO add your handling code here:
        txtTime.setToolTipText("Set wait after time");
    }//GEN-LAST:event_txtTimeMouseClicked

    private void txtTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimeKeyTyped
        // TODO add your handling code here:
        char typedchar = evt.getKeyChar();
        if (!(Character.isDigit(typedchar) || (typedchar == KeyEvent.VK_BACK_SPACE))
                || (typedchar == KeyEvent.VK_DELETE) || (txtTime.getText().length() >= 2)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtTimeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                new AppFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnCreateProject;
    private javax.swing.JButton btnCreateTC;
    private javax.swing.JButton btnDeleteTestCase;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JButton btnOpenProject;
    private javax.swing.JButton btnOpenTestFile;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnRepAll;
    private javax.swing.JButton btnRepLast;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnResize;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnUpdateDriver;
    private javax.swing.JPanel close;
    private javax.swing.JPanel contPanel;
    private javax.swing.JPanel createProjectPanel;
    private javax.swing.JPanel createTCPanel;
    private javax.swing.JPanel deleteTestCasePanel;
    private javax.swing.JLabel dirPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel minimize;
    private javax.swing.JPanel openFilePanel;
    private javax.swing.JPanel openProjectPanel;
    private javax.swing.JPanel playPanel;
    private javax.swing.JPanel repAllPannel;
    private javax.swing.JPanel repeatPanel;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JPanel restoreSize;
    private javax.swing.JPanel stopPanel;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtTime;
    private javax.swing.JPanel updateDriverPanel;
    // End of variables declaration//GEN-END:variables

    private JButton lookupButton(Container c, String text) {
        JButton temp = null;
        for (Component comp : c.getComponents()) {
            if (comp == null) {
                continue;
            }
            if (comp instanceof JButton && (temp = (JButton) comp).getText() != null && temp.getText().equals(text)) {
                return temp;
            } else if (comp instanceof Container) {
                if ((temp = lookupButton((Container) comp, text)) != null) {
                    return temp;
                }
            }
        }
        return temp;
    }

    public void keyboardString(final String text) {
        if (text != null) {
            try {
                final Robot robot = new Robot();
                for (int i = 0; i < text.length(); i++) {
                    final char ch = text.charAt(i);
                    final boolean upperCase = Character.isUpperCase(ch);
                    final int keyCode = KeyEvent.getExtendedKeyCodeForChar(ch);
                    //robot.delay(10);
                    if (upperCase) {
                        robot.keyPress(KeyEvent.VK_SHIFT);
                    }
                    robot.keyPress(keyCode);
                    robot.keyRelease(keyCode);
                    if (upperCase) {
                        robot.keyRelease(KeyEvent.VK_SHIFT);
                    }
                }

            } catch (final Exception e) {
                System.out.println(e);
            }
        }
    }

    static void setLocationToBottom(JFrame frame) {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        Dimension windowScreenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension fs = frame.getSize();
        int x = (int) rect.getMinX();
        int y = (int) rect.getMaxY() - frame.getHeight();
        int scrWidth = (int) windowScreenSize.getWidth();
        int scrHeight = (int) fs.getHeight();
        frame.setBounds(x, y - 40, scrWidth, scrHeight);
//    frame.setLocation( 0,y - 45);
//        GraphicsConfiguration config = frame.getGraphicsConfiguration();
//        Rectangle bounds = config.getBounds();
//        Insets insets = Toolkit.getDefaultToolkit().getScreenInsets(config);
//
//        // int x = bounds.x + bounds.width - insets.left - frame.getWidth();
//        // int y = bounds.y + insets.top;
//        frame.setLocation(frame.getX(), bounds.y + bounds.height - frame.getHeight());
    }
}
